//
// Generated file, do not edit! Created by opp_msgc 4.5 from NDNx/Messages/NdnNetPkt.msg.
//

#ifndef _NDNNETPKT_M_H_
#define _NDNNETPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "NetwPkt_m.h"
// }}



/**
 * Class generated from <tt>NDNx/Messages/NdnNetPkt.msg</tt> by opp_msgc.
 * <pre>
 * packet NdnNetPkt extends NetwPkt {
 *         LAddress::L3Type creatorAddr;
 *         
 * }
 * </pre>
 */
class NdnNetPkt : public ::NetwPkt
{
  protected:
    LAddress::L3Type creatorAddr_var;

  private:
    void copy(const NdnNetPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NdnNetPkt&);

  public:
    NdnNetPkt(const char *name=NULL, int kind=0);
    NdnNetPkt(const NdnNetPkt& other);
    virtual ~NdnNetPkt();
    NdnNetPkt& operator=(const NdnNetPkt& other);
    virtual NdnNetPkt *dup() const {return new NdnNetPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual LAddress::L3Type& getCreatorAddr();
    virtual const LAddress::L3Type& getCreatorAddr() const {return const_cast<NdnNetPkt*>(this)->getCreatorAddr();}
    virtual void setCreatorAddr(const LAddress::L3Type& creatorAddr);
};

inline void doPacking(cCommBuffer *b, NdnNetPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, NdnNetPkt& obj) {obj.parsimUnpack(b);}


#endif // _NDNNETPKT_M_H_
